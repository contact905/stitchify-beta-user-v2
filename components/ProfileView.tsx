import React from 'react';
import { User } from 'lucide-react';
import { ProfileVisibility } from '../types';

interface ProfileViewProps {
  profileImage: string | null;
  profileVisibility: ProfileVisibility;
  setProfileVisibility: React.Dispatch<React.SetStateAction<ProfileVisibility>>;
  savedDraftsCount: number;
  activeProjectsCount: number;
}

const Toggle = ({ isEnabled, onToggle }: { isEnabled: boolean, onToggle: () => void }) => (
    <button onClick={onToggle} className={`relative w-12 h-7 rounded-full transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-white focus:ring-orange-500 ${isEnabled ? 'bg-orange-500' : 'bg-gray-300'}`}>
      <span className="sr-only">Toggle Visibility</span>
      <div className={`absolute top-1 w-5 h-5 bg-white rounded-full transition-transform duration-300 shadow-lg transform ${isEnabled ? 'translate-x-6' : 'translate-x-1'}`} />
    </button>
);


const ProfileView: React.FC<ProfileViewProps> = ({ profileImage, profileVisibility, setProfileVisibility, savedDraftsCount, activeProjectsCount }) => {
    
    const toggleVisibility = (field: keyof ProfileVisibility) => {
        setProfileVisibility(prev => ({ ...prev, [field]: !prev[field] }));
    };

    const inputClasses = "w-full px-4 py-3 rounded-xl transition-all duration-300 bg-gray-100 border-2 border-gray-200 text-black placeholder-gray-500 focus:ring-2 focus:ring-orange-500/50 focus:border-orange-500 outline-none";
    
    return (
        <div className="min-h-screen pb-20 bg-gray-50">
            <div className="p-4 md:p-6 max-w-4xl mx-auto">
                <h2 className="text-2xl md:text-3xl font-bold mb-8 text-black flex items-center gap-3">
                    <User size={32} />„Éó„É≠„Éï„Ç£„Éº„É´
                </h2>
                <div className="space-y-6">
                    <div className="rounded-2xl p-6 border border-gray-200 bg-white shadow-sm">
                        <h3 className="text-xl font-bold text-black mb-6">Âü∫Êú¨ÊÉÖÂ†±</h3>
                        <div className="flex items-center gap-6 mb-8 pb-8 border-b border-gray-200">
                            <div className="relative">
                                <div className="w-24 h-24 rounded-full flex items-center justify-center overflow-hidden border-4 border-gray-200 bg-gray-100">
                                    {profileImage ? (<img src={profileImage} alt="Profile" className="w-full h-full object-cover" />) : (<User size={40} className="text-gray-400" />)}
                                </div>
                                <button className="absolute bottom-0 right-0 w-8 h-8 rounded-full flex items-center justify-center bg-orange-500/20 backdrop-blur-sm border border-orange-500/30 text-orange-600 hover:bg-orange-500/30 transition-colors">
                                    <span className="text-lg">üì∑</span>
                                </button>
                            </div>
                            <div className="flex-1">
                                <h4 className="text-lg font-bold text-black mb-1">„Éó„É≠„Éï„Ç£„Éº„É´ÁîªÂÉè</h4>
                                <p className="text-sm text-gray-600">„Éñ„É©„É≥„Éâ„É≠„Ç¥„Åæ„Åü„ÅØ‰ª£Ë°®ËÄÖ„ÅÆÂÜôÁúü</p>
                            </div>
                        </div>
                        
                        <div className="space-y-8">
                            {/* „Éñ„É©„É≥„ÉâÊÉÖÂ†± */}
                            <div className="space-y-6">
                                <h4 className="text-lg font-semibold text-gray-800 border-b border-gray-200 pb-2">„Éñ„É©„É≥„ÉâÊÉÖÂ†±</h4>
                                
                                <div>
                                    <div className="flex items-center justify-between mb-2">
                                        <label className="text-sm font-semibold text-gray-700">„Éñ„É©„É≥„ÉâÂêç</label>
                                        <Toggle isEnabled={profileVisibility.brandName} onToggle={() => toggleVisibility('brandName')} />
                                    </div>
                                    <input type="text" placeholder="‰æã: TOKYO APPAREL" defaultValue="TOKYO APPAREL" className={inputClasses} />
                                </div>
                                
                                <div>
                                    <div className="flex items-center justify-between mb-2">
                                        <label className="text-sm font-semibold text-gray-700">„Éñ„É©„É≥„Éâ„Ç≥„É≥„Çª„Éó„Éà</label>
                                        <Toggle isEnabled={profileVisibility.brandConcept} onToggle={() => toggleVisibility('brandConcept')} />
                                    </div>
                                    <textarea placeholder="„Éñ„É©„É≥„Éâ„ÅÆÁõÆÊåá„Åô‰∏ñÁïåË¶≥„ÇÑ„Ç≥„É≥„Çª„Éó„Éà..." defaultValue="„ÄåÈÉΩÂ∏ÇÁîüÊ¥ª„Å´ÂØÑ„ÇäÊ∑ª„ÅÜ„ÄÅÊåÅÁ∂öÂèØËÉΩ„Å™Êó•Â∏∏ÁùÄ„Äç„Çí„ÉÜ„Éº„Éû„Å´„ÄÅÊ©üËÉΩÊÄß„Å®„Éá„Ç∂„Ç§„É≥ÊÄß„Çí‰∏°Á´ã„Åó„Åü„Ç¢„Ç§„ÉÜ„É†„ÇíÂ±ïÈñã„ÄÇ" rows={3} className={inputClasses}></textarea>
                                </div>

                                <div>
                                    <div className="flex items-center justify-between mb-2">
                                        <label className="text-sm font-semibold text-gray-700">„Ç¶„Çß„Éñ„Çµ„Ç§„Éà</label>
                                        <Toggle isEnabled={profileVisibility.website} onToggle={() => toggleVisibility('website')} />
                                    </div>
                                    <input type="url" placeholder="https://example.com" defaultValue="https://tokyoapparel.com" className={inputClasses} />
                                </div>
                            </div>

                            {/* ÈÅãÂñ∂ËÄÖÊÉÖÂ†± */}
                            <div className="space-y-6">
                                <h4 className="text-lg font-semibold text-gray-800 border-b border-gray-200 pb-2">ÈÅãÂñ∂ËÄÖÊÉÖÂ†±</h4>
                                
                                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div>
                                        <div className="flex items-center justify-between mb-2">
                                            <label className="text-sm font-semibold text-gray-700">‰∫ãÊ•≠ÂΩ¢ÊÖã</label>
                                            <Toggle isEnabled={profileVisibility.entityType} onToggle={() => toggleVisibility('entityType')} />
                                        </div>
                                        <select className={inputClasses}>
                                            <option>Ê≥ï‰∫∫</option>
                                            <option>ÂÄã‰∫∫‰∫ãÊ•≠‰∏ª</option>
                                        </select>
                                    </div>
                                    <div>
                                        <div className="flex items-center justify-between mb-2">
                                            <label className="text-sm font-semibold text-gray-700">Ë®≠Á´ã/ÈñãÂßãÂπ¥</label>
                                            <Toggle isEnabled={profileVisibility.establishedYear} onToggle={() => toggleVisibility('establishedYear')} />
                                        </div>
                                        <input type="number" placeholder="‰æã: 2022" defaultValue="2022" className={inputClasses} />
                                    </div>
                                </div>
                                
                                <div>
                                    <div className="flex items-center justify-between mb-2">
                                        <label className="text-sm font-semibold text-gray-700">ÊãÖÂΩìËÄÖÂêç</label>
                                        <Toggle isEnabled={profileVisibility.contactName} onToggle={() => toggleVisibility('contactName')} />
                                    </div>
                                    <input type="text" placeholder="‰æã: Â±±Áî∞ Â§™ÈÉé" defaultValue="Â±±Áî∞ Â§™ÈÉé" className={inputClasses} />
                                </div>

                                <div>
                                    <div className="flex items-center justify-between mb-2">
                                        <label className="text-sm font-semibold text-gray-700">„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ</label>
                                        <Toggle isEnabled={profileVisibility.email} onToggle={() => toggleVisibility('email')} />
                                    </div>
                                    <input type="email" placeholder="example@example.com" defaultValue="yamada@tokyoapparel.com" className={inputClasses} />
                                </div>
                                
                                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div>
                                        <div className="flex items-center justify-between mb-2">
                                            <label className="text-sm font-semibold text-gray-700">ÊâÄÂú®Âú∞</label>
                                            <Toggle isEnabled={profileVisibility.location} onToggle={() => toggleVisibility('location')} />
                                        </div>
                                        <input type="text" placeholder="‰æã: Êù±‰∫¨ÈÉΩÊ∏ãË∞∑Âå∫" defaultValue="Êù±‰∫¨ÈÉΩÊ∏ãË∞∑Âå∫" className={inputClasses} />
                                    </div>
                                    <div>
                                        <div className="flex items-center justify-between mb-2">
                                            <label className="text-sm font-semibold text-gray-700">‰∫ãÊ•≠‰∫àÁÆó (‰Ωø„Åà„Çã„ÅäÈáë)</label>
                                            <Toggle isEnabled={profileVisibility.capital} onToggle={() => toggleVisibility('capital')} />
                                        </div>
                                        <select className={inputClasses}>
                                            <option>ÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ</option>
                                            <option>10‰∏áÂÜÜÊú™Ê∫Ä</option>
                                            <option selected>10‰∏áÂÜÜ„Äú30‰∏áÂÜÜ</option>
                                            <option>30‰∏áÂÜÜ„Äú100‰∏áÂÜÜ</option>
                                            <option>100‰∏áÂÜÜ‰ª•‰∏ä</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <button className="w-full mt-8 px-6 py-3 rounded-xl font-bold bg-orange-500/20 backdrop-blur-sm border border-orange-500/30 text-orange-600 hover:bg-orange-500/30 transition-all duration-300">Â§âÊõ¥„Çí‰øùÂ≠ò</button>
                    </div>
                    <div className="rounded-2xl p-6 border border-gray-200 bg-white shadow-sm">
                        <h3 className="text-xl font-bold text-black mb-4">Âà©Áî®Áµ±Ë®à</h3>
                        <p className="text-sm text-gray-600 mb-6">„ÅÇ„Å™„Åü„ÅÆStitchifyÂà©Áî®Áä∂Ê≥Å</p>
                        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                            {[{ label: 'Á∑è„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÊï∞', value: activeProjectsCount + 5 }, { label: 'ÂÆå‰∫Ü„Éó„É≠„Ç∏„Çß„ÇØ„Éà', value: 5 }, { label: '‰∏ãÊõ∏„Åç', value: savedDraftsCount }, { label: 'ÂèñÂºïÂ∑•Â†¥Êï∞', value: 3 }].map((stat, idx) => (
                                <div key={idx} className="p-4 rounded-xl text-center bg-gray-100 border border-gray-200">
                                    <p className="text-3xl font-bold text-black mb-1">{stat.value}</p>
                                    <p className="text-xs text-gray-600">{stat.label}</p>
                                </div>
                            ))}
                        </div>
                    </div>
                    <button onClick={() => { if (window.confirm('„É≠„Ç∞„Ç¢„Ç¶„Éà„Åó„Åæ„Åô„ÅãÔºü')) { alert('„É≠„Ç∞„Ç¢„Ç¶„Éà„Åó„Åæ„Åó„Åü'); } }} className="w-full px-6 py-3 rounded-xl font-bold bg-black/5 backdrop-blur-sm border border-black/10 text-gray-700 hover:bg-black/10 transition-all duration-300">
                        „É≠„Ç∞„Ç¢„Ç¶„Éà
                    </button>
                </div>
            </div>
        </div>
    );
};

export default ProfileView;